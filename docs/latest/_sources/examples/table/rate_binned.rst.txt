
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/table/rate_binned.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_table_rate_binned.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_table_rate_binned.py:


.. sectionauthor:: Duncan Macleod <duncan.macleod@ligo.org>
.. currentmodule:: gwpy.table

Plotting `EventTable` rate versus time for specific column bins
###############################################################

I would like to study the rate at which event triggers are generated by the
`ExcessPower` gravitational-wave burst detection algorithm, over a small
stretch of data, binned by various thresholds on signal-to-noise ratio (SNR).

The data from which these events were generated contain a simulated
gravitational-wave signal, or hardware injection, used to validate
the performance of the LIGO detectors and downstream data analysis procedures.

.. GENERATED FROM PYTHON SOURCE LINES 36-39

First, we import the `EventTable` object and read in a set of events from
a LIGO_LW-format XML file containing a
:class:`sngl_burst <igwn_ligolw.lsctables.SnglBurstTable>` table

.. GENERATED FROM PYTHON SOURCE LINES 39-46

.. code-block:: Python

    from gwpy.table import EventTable
    events = EventTable.read(
        "H1-LDAS_STRAIN-968654552-10.xml.gz",
        tablename="sngl_burst",
        columns=["peak", "snr"],
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/duncan.macleod/gwpy-nightly-build/conda/envs/gwpy-nightly-3.11/lib/python3.11/site-packages/igwn_ligolw/lsctables.py:3033: UserWarning: igwn_ligolw.lsctables.use_in() is deprecated.  simply importing the lsctables module automatically enables the custom table support features it provides.
      warnings.warn(




.. GENERATED FROM PYTHON SOURCE LINES 47-54

.. note::

   Here we manually specify the `columns` to read in order to optimise
   the `read()` operation to parse only the data we actually need.

Now we can use the :meth:`~EventTable.binned_event_rates` method to
calculate the event rate in a number of bins of SNR.

.. GENERATED FROM PYTHON SOURCE LINES 54-63

.. code-block:: Python

    rates = events.binned_event_rates(
        1,
        "snr",
        [2, 3, 5, 8],
        operator=">=",
        start=968654552,
        end=968654562,
    )








.. GENERATED FROM PYTHON SOURCE LINES 64-70

.. note::

   The list `[2, 3, 5, 8]` and operator `>=` specifies SNR tresholds of
   2, 3, 5, and 8.

Finally, we can make a plot:

.. GENERATED FROM PYTHON SOURCE LINES 70-78

.. code-block:: Python


    plot = rates.step()
    ax = plot.gca()
    ax.set_xlim(968654552, 968654562)
    ax.set_ylabel("Event rate [Hz]")
    ax.set_title("LIGO Hanford Observatory event rate for HW100916")
    ax.legend(title="SNR $>=$")
    plot.show()



.. image-sg:: /examples/table/images/sphx_glr_rate_binned_001.png
   :alt: LIGO Hanford Observatory event rate for HW100916
   :srcset: /examples/table/images/sphx_glr_rate_binned_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.374 seconds)


.. _sphx_glr_download_examples_table_rate_binned.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: rate_binned.ipynb <rate_binned.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: rate_binned.py <rate_binned.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: rate_binned.zip <rate_binned.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
